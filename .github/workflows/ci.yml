name: CI/CD Backend

# Déclenche sur push vers main ou dev
on:
  push:
    branches:
      - main
      - dev

# Nom de l’image (sans le préfixe utilisateur)
env:
  IMAGE_NAME: jlh-autopam-backend

jobs:

  # 1️⃣ Compilation, tests & packaging
  build:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.set-tag.outputs.TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Run tests & package
        run: mvn clean package -DskipTests -B

      - name: Déterminer le tag
        id: set-tag
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" == "main" ]]; then
            TAG=latest
          else
            TAG=dev-${GITHUB_SHA::8}
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=TAG::$TAG"

  # 2️⃣ Construction de l’image Docker
  docker-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          # Assurez-vous que ces secrets existent et correspondent bien à votre compte Docker Hub
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build \
            --file Dockerfile \
            --target runtime \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build.outputs.TAG }} \
            .

  # 3️⃣ Push de l’image sur Docker Hub
  docker-push:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub (re-login for safety)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build.outputs.TAG }}

  # 4️⃣ Déploiement en production (uniquement sur main)
  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: docker-push
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Pull & run prod container
        run: |
          docker-compose -f docker-compose.prod.yml pull backend
          docker-compose -f docker-compose.prod.yml up -d backend
